// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AuctionExampleAPI.Data.Migrations
{
    [DbContext(typeof(AuctionExampleContext))]
    partial class AuctionExampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AuctionExampleAPI.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("item_id")
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('item_id_seq'::regclass)");

                    b.Property<int>("CurrentPrice")
                        .HasColumnName("current_price")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndTime")
                        .HasColumnName("end_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<int>("StartPrice")
                        .HasColumnName("start_price")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnName("start_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Status")
                        .HasColumnName("status")
                        .HasColumnType("boolean");

                    b.HasKey("ItemId");

                    b.ToTable("item");
                });

            modelBuilder.Entity("AuctionExampleAPI.Models.Rate", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rate_id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ItemId")
                        .HasColumnName("item_id")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnName("price")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RateTime")
                        .HasColumnName("rate_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("RateId");

                    b.HasIndex("ItemId");

                    b.ToTable("rate");
                });

            modelBuilder.Entity("AuctionExampleAPI.Models.Rate", b =>
                {
                    b.HasOne("AuctionExampleAPI.Models.Item", "Item")
                        .WithMany("Rate")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("rate_item_id_fkey")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
